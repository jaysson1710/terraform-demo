{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "18324965880756844903"
    }
  },
  "parameters": {
    "managedInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Enter managed instance name."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "Enter user name."
      }
    },
    "servicePrincipal": {
        "defaultValue": {
                "type": "SystemAssigned"
            },
        "type": "object"
    },
    "administratorLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Enter password."
      }
    },
    "timezoneId": {
        "defaultValue": "UTC",
        "type": "String",
        "metadata": {
            "description": "Id of the timezone. Allowed values are timezones supported by Windows."
        }
    },
    "zoneRedundant": {
        "defaultValue": false,
        "type": "Bool",
        "metadata": {
            "description": "Determines whether zone redundancy will be enabled."
        }
    },
    "requestedBackupStorageRedundancy": {
        "defaultValue": "Local",
        "allowedValues": [
            "Geo",
            "Zone",
            "Local"
        ],
        "type": "String",
        "metadata": {
            "description": "Option for configuring backup storage redundancy. Selecting 'Geo' will enable 'RA-GRS'."
        }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Enter location. If you leave this field blank resource group location would be used."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "SQLMI-VNET",
      "metadata": {
        "description": "Enter virtual network name. If you leave this field blank name will be created by the template."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Enter virtual network address prefix."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "ManagedInstance",
      "metadata": {
        "description": "Enter subnet name."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Enter subnet address prefix."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "GP_Gen5",
      "allowedValues": [
        "GP_Gen5",
        "BC_Gen5"
      ],
      "metadata": {
        "description": "Enter sku name."
      }
    },
    "skuEdition": {
          "defaultValue": "GeneralPurpose",
          "allowedValues": [
              "GeneralPurpose",
              "BusinessCritical"
          ],
          "type": "String",
          "metadata": {
              "description": "SKU Edition for the Managed Instance. In case skuName is set this parameter is ignored."
          }
    },
    "hardwareFamily": {
        "defaultValue": "Gen5",
        "allowedValues": [
            "Gen4",
            "Gen5",
            "Gen8IM",
            "Gen8IH"
        ],
        "type": "String",
        "metadata": {
            "description": "Compute generation for the instance. In case skuName is set this parameter is ignored."
        }
    },
    "vCores": {
      "type": "int",
      "defaultValue": 8,
      "allowedValues": [
        4,
        8,
        16,
        24,
        32,
        40,
        64,
        80
      ],
      "metadata": {
        "description": "Enter number of vCores."
      }
    },
    "storageSizeInGB": {
      "type": "int",
      "defaultValue": 256,
      "maxValue": 8192,
      "minValue": 32,
      "metadata": {
        "description": "Enter storage size."
      }
    },
    "collation": {
        "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
        "type": "String",
        "metadata": {
            "description": "Collation of the Managed Instance."
        }
    },
    "proxyOverride": {
        "defaultValue": "Proxy",
        "allowedValues": [
            "Proxy",
            "Redirect"
        ],
        "type": "String",
        "metadata": {
            "description": "Determines connection type for private endpoint. Proxy connection type enables proxy connectivity to Managed Instance. Redirect mode enables direct connectivity to the instance resulting in improved latency and throughput."
        }
    },
    "publicDataEndpointEnabled": {
        "defaultValue": false,
        "type": "Bool",
        "metadata": {
            "description": "Determines whether public data endpoint will be enabled, required for clients outside of the connected virtual networks. Public endpoint will always default to Proxy connection mode."
        }
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "LicenseIncluded",
      "allowedValues": [
        "BasePrice",
        "LicenseIncluded"
      ],
      "metadata": {
        "description": "Enter license type."
      }
    }
  },
  "variables": {
    "networkSecurityGroupName": "[format('SQLMI-{0}-NSG', parameters('managedInstanceName'))]",
    "routeTableName": "[format('SQLMI-{0}-Route-Table', parameters('managedInstanceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_tds_inbound",
            "properties": {
              "description": "Allow access to data",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "[parameters('subnetPrefix')]",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow_redirect_inbound",
            "properties": {
              "description": "Allow inbound redirect traffic to Managed Instance inside the virtual network",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "11000-11999",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "[parameters('subnetPrefix')]",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "deny_all_inbound",
            "properties": {
              "description": "Deny all other inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Inbound"
            }
          },
          {
                  "name": "allow_geodr_inbound",
                  "properties": {
                      "description": "Allow inbound geodr traffic inside the virtual network",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5022",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix":  "[parameters('subnetPrefix')]",
                      "access": "Allow",
                      "priority": 1200,
                      "direction": "Inbound"
                  }
              },
          {
            "name": "deny_all_outbound",
            "properties": {
              "description": "Deny all other outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Outbound"
            }
          },
          {
                "name": "allow_linkedserver_outbound",
                "properties": {
                    "description": "Allow outbound linkedserver traffic inside the virtual network",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "1433",
                    "sourceAddressPrefix": "[parameters('subnetPrefix')]",
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 1000,
                    "direction": "Outbound"
                }
            },
            {
                "name": "allow_redirect_outbound",
                "properties": {
                    "description": "Allow outbound redirect traffic to Managed Instance inside the virtual network",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "11000-11999",
                    "sourceAddressPrefix": "[parameters('subnetPrefix')]",
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 1100,
                    "direction": "Outbound"
                }
            },
            {
                "name": "allow_geodr_outbound",
                "properties": {
                    "description": "Allow outbound geodr traffic inside the virtual network",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "5022",
                    "sourceAddressPrefix": "[parameters('subnetPrefix')]",
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 1200,
                    "direction": "Outbound"
                }
            },
            {
                "name": "allow_privatelink_outbound",
                "properties": {
                    "description": "Allow outbound private link traffic inside the virtual network",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "[parameters('subnetPrefix')]",
                    "destinationAddressPrefix": "VirtualNetwork",
                    "access": "Allow",
                    "priority": 1300,
                    "direction": "Outbound"
                }
            }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-05-01",
      "name": "[variables('routeTableName')]",
      "location": "[parameters('location')]",
      "properties": {
        "disableBgpRoutePropagation": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              },
              "delegations": [
                {
                  "name": "managedInstanceDelegation",
                  "properties": {
                    "serviceName": "Microsoft.Sql/managedInstances"
                  }
                }
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/managedInstances",
      "apiVersion": "2021-05-01-preview",
      "name": "[parameters('managedInstanceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuEdition')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "storageSizeInGB": "[parameters('storageSizeInGB')]",
        "vCores": "[parameters('vCores')]",
        "licenseType": "[parameters('licenseType')]",
        "hardwareFamily": "[parameters('hardwareFamily')]",
        "collation": "[parameters('collation')]",
        "proxyOverride": "[parameters('proxyOverride')]",
        "publicDataEndpointEnabled": "[parameters('publicDataEndpointEnabled')]",
        "timezoneId": "[parameters('timezoneId')]",
        "requestedBackupStorageRedundancy": "[parameters('requestedBackupStorageRedundancy')]",
        "zoneRedundant": "[parameters('zoneRedundant')]",
        "servicePrincipal": "[parameters('servicePrincipal')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    }
  ]
}